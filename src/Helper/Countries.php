<?php

declare(strict_types=1);

namespace Upmind\ProvisionProviders\DomainNames\Helper;

class Countries
{
    /**
     * Map of alpha-2 iso country codes to the equivalent country name in English.
     */
    protected static $countriesByCode = [
        'AC' => 'Ascension',
        'AD' => 'Andorra',
        'AE' => 'United Arab Emirates',
        'AF' => 'Afghanistan',
        'AG' => 'Antigua and Barbuda',
        'AI' => 'Anguilla',
        'AL' => 'Albania',
        'AM' => 'Armenia',
        'AN' => 'Netherland Antilles',
        'AO' => 'Angola',
        'AQ' => 'Antarctica',
        'AR' => 'Argentina',
        'AS' => 'American Samoa',
        'AT' => 'Austria',
        'AU' => 'Australia',
        'AW' => 'Aruba',
        'AZ' => 'Azerbaidjan',
        'BA' => 'Bosnia-Herzegovina',
        'BB' => 'Barbados',
        'BD' => 'Banglades',
        'BE' => 'Belgium',
        'BF' => 'Burkina Faso',
        'BG' => 'Bulgaria',
        'BH' => 'Bahrain',
        'BI' => 'Burundi',
        'BJ' => 'Benin',
        'BM' => 'Bermuda',
        'BN' => 'Brunei Darussalam',
        'BO' => 'Bolivia',
        'BR' => 'Brazil',
        'BS' => 'Bahamas',
        'BT' => 'Buthan',
        'BV' => 'Bouvet Island',
        'BW' => 'Botswana',
        'BY' => 'Belarus',
        'BZ' => 'Belize',
        'CA' => 'Canada',
        'CC' => 'Cocos (Keeling) Islands',
        'CF' => 'Central African Republic',
        'CG' => 'Congo',
        'CH' => 'Switzerland',
        'CI' => 'Ivory Coast',
        'CK' => 'Cook Islands',
        'CL' => 'Chile',
        'CM' => 'Cameroon',
        'CN' => 'China',
        'CO' => 'Colombia',
        'CR' => 'Costa Rica',
        'CS' => 'Czechoslovakia',
        'CU' => 'Cuba',
        'CV' => 'Cape Verde',
        'CX' => 'Christmas Island',
        'CY' => 'Cyprus',
        'CZ' => 'Czech Republic',
        'DE' => 'Germany',
        'DJ' => 'Djibouti',
        'DK' => 'Denmark',
        'DM' => 'Dominica',
        'DO' => 'Dominican Republic',
        'DZ' => 'Algeria',
        'EC' => 'Ecuador',
        'EE' => 'Estonia',
        'EG' => 'Egypt',
        'EH' => 'Western Sahara',
        'ES' => 'Spain',
        'ET' => 'Ethiopia',
        'FI' => 'Finland',
        'FJ' => 'Fiji',
        'FK' => 'Falkland Islands (Malvinas)',
        'FM' => 'Micronesia',
        'FO' => 'Faroe Islands',
        'FR' => 'France',
        'GA' => 'Gabon',
        'GB' => 'Great Britain',
        'GD' => 'Grenada',
        'GE' => 'Georgia',
        'GH' => 'Ghana',
        'GI' => 'Gibraltar',
        'GL' => 'Greenland',
        'GP' => 'Guadeloupe (French)',
        'GQ' => 'Equatorial Guinea',
        'GF' => 'Guyana (French)',
        'GM' => 'Gambia',
        'GN' => 'Guinea',
        'GR' => 'Greece',
        'GS' => 'South Georgia and South Sandwich Islands',
        'GT' => 'Guatemala',
        'GU' => 'Guam (US)',
        'GW' => 'Guinea Bissau',
        'GY' => 'Guyana',
        'HK' => 'Hong Kong',
        'HM' => 'Heard and McDonald Islands',
        'HN' => 'Honduras',
        'HR' => 'Croatia',
        'HT' => 'Haiti',
        'HU' => 'Hungary',
        'ID' => 'Indonesia',
        'IE' => 'Ireland',
        'IL' => 'Israel',
        'IN' => 'India',
        'IO' => 'British Indian Ocean Territory',
        'IQ' => 'Iraq',
        'IR' => 'Iran',
        'IS' => 'Iceland',
        'IT' => 'Italy',
        'JM' => 'Jamaica',
        'JO' => 'Jordan',
        'JP' => 'Japan',
        'KE' => 'Kenya',
        'KG' => 'Kirgistan',
        'KH' => 'Cambodia',
        'KI' => 'Kiribati',
        'KM' => 'Comoros',
        'KN' => 'Saint Kitts Nevis Anguilla',
        'KP' => 'North Korea',
        'KR' => 'South Korea',
        'KW' => 'Kuwait',
        'KY' => 'Cayman Islands',
        'KZ' => 'Kazachstan',
        'LA' => 'Laos',
        'LB' => 'Lebanon',
        'LC' => 'Saint Lucia',
        'LI' => 'Liechtenstein',
        'LK' => 'Sri Lanka',
        'LR' => 'Liberia',
        'LS' => 'Lesotho',
        'LT' => 'Lithuania',
        'LU' => 'Luxembourg',
        'LV' => 'Latvia',
        'LY' => 'Libya',
        'MA' => 'Morocco',
        'MC' => 'Monaco',
        'MD' => 'Moldavia',
        'MG' => 'Madagascar',
        'MH' => 'Marshall Islands',
        'ML' => 'Mali',
        'MM' => 'Myanmar',
        'MN' => 'Mongolia',
        'MO' => 'Macau',
        'MP' => 'Northern Mariana Islands',
        'MQ' => 'Martinique (French)',
        'MR' => 'Mauritania',
        'MS' => 'Montserrat',
        'MT' => 'Malta',
        'MU' => 'Mauritius',
        'MV' => 'Maldives',
        'MW' => 'Malawi',
        'MX' => 'Mexico',
        'MY' => 'Malaysia',
        'MZ' => 'Mozambique',
        'NA' => 'Namibia',
        'NC' => 'New Caledonia (French)',
        'NE' => 'Niger',
        'NF' => 'Norfolk Island',
        'NG' => 'Nigeria',
        'NI' => 'Nicaragua',
        'NL' => 'Netherlands',
        'NO' => 'Norway',
        'NP' => 'Nepal',
        'NR' => 'Nauru',
        'NT' => 'Neutral Zone',
        'NU' => 'Niue',
        'NZ' => 'New Zealand',
        'OM' => 'Oman',
        'PA' => 'Panama',
        'PE' => 'Peru',
        'PF' => 'Polynesia (French)',
        'PG' => 'Papua New',
        'PH' => 'Philippines',
        'PK' => 'Pakistan',
        'PL' => 'Poland',
        'PM' => 'Saint Pierre and Miquelon',
        'PN' => 'Pitcairn',
        'PT' => 'Portugal',
        'PR' => 'Puerto Rico (US)',
        'PW' => 'Palau',
        'PY' => 'Paraguay',
        'QA' => 'Qatar',
        'RE' => 'Reunion (French)',
        'RO' => 'Romania',
        'RU' => 'Russian Federation',
        'RW' => 'Rwanda',
        'SA' => 'Saudi Arabia',
        'SB' => 'Solomon Islands',
        'SC' => 'Seychelles',
        'SD' => 'Sudan',
        'SE' => 'Sweden',
        'SG' => 'Singapore',
        'SH' => 'Saint Helena',
        'SI' => 'Slovenia',
        'SJ' => 'Svalbard and Jan Mayen Islands',
        'SK' => 'Slovak Republic',
        'SL' => 'Sierra Leone',
        'SM' => 'San Marino',
        'SN' => 'Senegal',
        'SO' => 'Somalia',
        'SR' => 'Suriname',
        'ST' => 'Saint Tome and Principe',
        'SU' => 'Soviet Union',
        'SV' => 'El Salvador',
        'SY' => 'Syria',
        'SZ' => 'Swaziland',
        'TC' => 'Turks and Caicos Islands',
        'TD' => 'Chad',
        'TF' => 'French Southern Territory',
        'TG' => 'Togo',
        'TH' => 'Thailand',
        'TJ' => 'Tadjikistan',
        'TK' => 'Tokelau',
        'TM' => 'Turkmenistan',
        'TN' => 'Tunisia',
        'TO' => 'Tonga',
        'TP' => 'East Timor',
        'TR' => 'Turkey',
        'TT' => 'Trinidad and Tobago',
        'TV' => 'Tuvalu',
        'TW' => 'Taiwan',
        'TZ' => 'Tanzania',
        'UA' => 'Ukraine',
        'UG' => 'Uganda',
        'UK' => 'United Kingdom',
        'UM' => 'US Minor Outlying Islands',
        'US' => 'United States',
        'UY' => 'Uruguay',
        'UZ' => 'Uzbekistan',
        'VA' => 'Vatican City State',
        'VC' => 'Saint Vincent and Grenadines',
        'VE' => 'Venezuela',
        'VG' => 'Virgin Islands (British)',
        'VI' => 'Virgin Islands (US)',
        'VN' => 'Vietnam',
        'VU' => 'Vanuatu',
        'WF' => 'Wallis and Futuna Islands',
        'WS' => 'Samoa',
        'YE' => 'Yemen',
        'YU' => 'Yugoslavia',
        'ZA' => 'South Africa',
        'ZM' => 'Zambia',
        'ZR' => 'Zaire',
        'ZW' => 'Zimbabwe',
    ];

    /**
     * Map of english and local country names to their equivalent alpha-2 iso country code.
     *
     * @link https://wiki.openstreetmap.org/wiki/Nominatim/Country_Codes
     */
    protected static $codesByCountry = [
        'Andorra' => 'AD',
        'United Arab Emirates' => 'AE',
        'دولة الإمارات العربيّة المتّحدة' => 'AE',
        'Afghanistan' => 'AF',
        'د افغانستان اسلامي دولتدولت اسلامی افغانستان' => 'AF',
        'جمهوری اسلامی افغانستان' => 'AF',
        'Antigua and Barbuda' => 'AG',
        'Anguilla' => 'AI',
        'Albania' => 'AL',
        'Shqipëria' => 'AL',
        'Armenia' => 'AM',
        'Հայաստան' => 'AM',
        'Angola' => 'AO',
        'Antarctica' => 'AQ',
        'Antártico' => 'AQ',
        'Antarctique' => 'AQ',
        'Антарктике' => 'AQ',
        'Argentina' => 'AR',
        'American Samoa' => 'AS',
        'Austria' => 'AT',
        'Österreich' => 'AT',
        'Australia' => 'AU',
        'Aruba' => 'AW',
        'Aland Islands' => 'AX',
        'Åland' => 'AX',
        'Azerbaijan' => 'AZ',
        'Azərbaycan' => 'AZ',
        'Bosnia and Herzegovina' => 'BA',
        'Bosna i Hercegovina' => 'BA',
        'Barbados' => 'BB',
        'Bangladesh' => 'BD',
        'গণপ্রজাতন্ত্রী বাংলাদেশ' => 'BD',
        'Belgium' => 'BE',
        'België' => 'BE',
        'Belgique' => 'BE',
        'Belgien' => 'BE',
        'Burkina Faso' => 'BF',
        'Bulgaria' => 'BG',
        'България' => 'BG',
        'Bahrain' => 'BH',
        'البحرين' => 'BH',
        'Burundi' => 'BI',
        'Benin' => 'BJ',
        'Bénin' => 'BJ',
        'Saint-Barthélemy' => 'BL',
        'Bermuda' => 'BM',
        'Brunei Darussalam' => 'BN',
        'Bolivia' => 'BO',
        'Bulibiya' => 'BO',
        'Volívia' => 'BO',
        'Wuliwya' => 'BO',
        'Caribbean Netherlands' => 'BQ',
        'Caribisch Nederland' => 'BQ',
        'Brazil' => 'BR',
        'Brasil' => 'BR',
        'Bahamas' => 'BS',
        'Bhutan' => 'BT',
        'འབྲུག་ཡུལ' => 'BT',
        'Bouvet Island' => 'BV',
        'Bouvetøya' => 'BV',
        'Botswana' => 'BW',
        'Belarus' => 'BY',
        'Беларусь' => 'BY',
        'Belize' => 'BZ',
        'Canada' => 'CA',
        'Cocos (Keeling) Islands' => 'CC',
        'Democratic Republic of the Congo (Congo-Kinshasa, former Zaire)' => 'CD',
        'République Démocratique du Congo' => 'CD',
        'Centrafrican Republic' => 'CF',
        'République centrafricaine' => 'CF',
        'Ködörösêse tî Bêafrîka' => 'CF',
        'Republic of the Congo (Congo-Brazzaville)' => 'CG',
        'République du Congo' => 'CG',
        'Switzerland' => 'CH',
        'Schweiz' => 'CH',
        'Suisse' => 'CH',
        'Svizzera' => 'CH',
        'Svizra' => 'CH',
        'Côte d\'Ivoire' => 'CI',
        'Cook Islands' => 'CK',
        'Kūki ʻĀirani' => 'CK',
        'Chile' => 'CL',
        'Cameroon' => 'CM',
        'Cameroun' => 'CM',
        'China' => 'CN',
        '中国' => 'CN',
        'Colombia' => 'CO',
        'Costa Rica' => 'CR',
        'Cuba' => 'CU',
        'Cabo Verde' => 'CV',
        'Curaçao' => 'CW',
        'Christmas Island' => 'CX',
        'Cyprus' => 'CY',
        'Κύπρος' => 'CY',
        'Kibris' => 'CY',
        'Czech Republic' => 'CZ',
        'Česká republika' => 'CZ',
        'Germany' => 'DE',
        'Deutschland' => 'DE',
        'Djibouti' => 'DJ',
        'جيبوتي' => 'DJ',
        'Jabuuti' => 'DJ',
        'Gabuutih' => 'DJ',
        'Denmark' => 'DK',
        'Danmark' => 'DK',
        'Dominica' => 'DM',
        'Dominican Republic' => 'DO',
        'República Dominicana' => 'DO',
        'Algeria' => 'DZ',
        'الجزائر' => 'DZ',
        'Ecuador' => 'EC',
        'Estonia' => 'EE',
        'Eesti' => 'EE',
        'Egypt' => 'EG',
        'مصر' => 'EG',
        'Western Sahara' => 'EH',
        'Sahara Occidental' => 'EH',
        'Eritrea' => 'ER',
        'ኤርትራ' => 'ER',
        'إرتريا' => 'ER',
        'Spain' => 'ES',
        'España' => 'ES',
        'Ethiopia' => 'ET',
        'ኢትዮጵያ' => 'ET',
        'Itoophiyaa' => 'ET',
        'Finland' => 'FI',
        'Suomi' => 'FI',
        'Fiji' => 'FJ',
        'Falkland Islands' => 'FK',
        'Micronesia (Federated States of)' => 'FM',
        'Micronesia' => 'FM',
        'Faroe Islands' => 'FO',
        'Føroyar' => 'FO',
        'Færøerne' => 'FO',
        'France' => 'FR',
        'Gabon' => 'GA',
        'United Kingdom' => 'GB',
        'Grenada' => 'GD',
        'Georgia' => 'GE',
        'საქართველო' => 'GE',
        'French Guiana' => 'GF',
        'Guyane française' => 'GF',
        'Guernsey' => 'GG',
        'Ghana' => 'GH',
        'Gibraltar' => 'GI',
        'Greenland' => 'GL',
        'Kalaallit Nunaat' => 'GL',
        'Grønland' => 'GL',
        'The Gambia' => 'GM',
        'Guinea' => 'GN',
        'Guinée' => 'GN',
        'Guadeloupe' => 'GP',
        'Equatorial Guinea' => 'GQ',
        'Guiena ecuatorial' => 'GQ',
        'Guinée équatoriale' => 'GQ',
        'Guiné Equatorial' => 'GQ',
        'Greece' => 'GR',
        'Ελλάδα' => 'GR',
        'South Georgia and the South Sandwich Islands' => 'GS',
        'Guatemala' => 'GT',
        'Guam' => 'GU',
        'Guåhån' => 'GU',
        'Guinea Bissau' => 'GW',
        'Guiné-Bissau' => 'GW',
        'Guyana' => 'GY',
        'Hong Kong (SAR of China)' => 'HK',
        '香港' => 'HK',
        'Hong Kong' => 'HK',
        'Heard Island and McDonald Islands' => 'HM',
        'Honduras' => 'HN',
        'Croatia' => 'HR',
        'Hrvatska' => 'HR',
        'Haiti' => 'HT',
        'Haïti' => 'HT',
        'Ayiti' => 'HT',
        'Hungary' => 'HU',
        'Magyarország' => 'HU',
        'Indonesia' => 'ID',
        'Ireland' => 'IE',
        'Éire' => 'IE',
        'Israel' => 'IL',
        'ישראל' => 'IL',
        'Isle of Man' => 'IM',
        'India' => 'IN',
        'भारत' => 'IN',
        'British Indian Ocean Territory' => 'IO',
        'Iraq' => 'IQ',
        'العراق' => 'IQ',
        'Iran' => 'IR',
        'ایران' => 'IR',
        'Iceland' => 'IS',
        'Ísland' => 'IS',
        'Italy' => 'IT',
        'Italia' => 'IT',
        'Jersey' => 'JE',
        'Jamaica' => 'JM',
        'Jordan' => 'JO',
        'الأُرْدُن' => 'JO',
        'Japan' => 'JP',
        '日本' => 'JP',
        'Kenya' => 'KE',
        'Kyrgyzstan' => 'KG',
        'Кыргызстан' => 'KG',
        'Киргизия' => 'KG',
        'Cambodia' => 'KH',
        'កម្ពុជា' => 'KH',
        'Kiribati' => 'KI',
        'Comores' => 'KM',
        'ﺍﻟﻘﻤﺮي' => 'KM',
        'Komori' => 'KM',
        'Saint Kitts and Nevis' => 'KN',
        'North Korea' => 'KP',
        '북조선' => 'KP',
        'South Korea' => 'KR',
        '대한민국' => 'KR',
        'Kuwait' => 'KW',
        'الكويت' => 'KW',
        'Cayman Islands' => 'KY',
        'Kazakhstan' => 'KZ',
        'Қазақстан' => 'KZ',
        'Казахстан' => 'KZ',
        'Laos' => 'LA',
        'ປະຊາຊົນລາວ' => 'LA',
        'Lebanon' => 'LB',
        'لبنان' => 'LB',
        'Liban' => 'LB',
        'Saint Lucia' => 'LC',
        'Liechtenstein' => 'LI',
        'Sri Lanka' => 'LK',
        'ශ්‍රී ලංකා' => 'LK',
        'இலங்கை' => 'LK',
        'Liberia' => 'LR',
        'Lesotho' => 'LS',
        'Lithuania' => 'LT',
        'Lietuva' => 'LT',
        'Luxembourg' => 'LU',
        'Lëtzebuerg' => 'LU',
        'Luxemburg' => 'LU',
        'Latvia' => 'LV',
        'Latvija' => 'LV',
        'Libya' => 'LY',
        'ليبيا' => 'LY',
        'Morocco' => 'MA',
        'المغرب' => 'MA',
        'Maroc' => 'MA',
        'ⵍⵎⵖⵔⵉⴱ' => 'MA',
        'Monaco' => 'MC',
        'Moldova' => 'MD',
        'Молдавия' => 'MD',
        'Montenegro' => 'ME',
        'Crna Gora' => 'ME',
        'Црна Гора' => 'ME',
        'Saint Martin (French part)' => 'MF',
        'Saint-Martin' => 'MF',
        'Madagascar' => 'MG',
        'Madagasikara' => 'MG',
        'Marshall Islands' => 'MH',
        'North Macedonia' => 'MK',
        'Северна Македонија' => 'MK',
        'Mali' => 'ML',
        'Myanmar' => 'MM',
        'မြန်မာ' => 'MM',
        'Mongolia' => 'MN',
        'Монгол Улс' => 'MN',
        'Macao (SAR of China)' => 'MO',
        '澳門' => 'MO',
        'Macau' => 'MO',
        'Northern Mariana Islands' => 'MP',
        'Martinique' => 'MQ',
        'Mauritania' => 'MR',
        'موريتانيا' => 'MR',
        'Mauritanie' => 'MR',
        'Montserrat' => 'MS',
        'Malta' => 'MT',
        'Mauritius' => 'MU',
        'Maurice' => 'MU',
        'Maldives' => 'NP',
        'Malawi' => 'MW',
        'Mexico' => 'MX',
        'México' => 'MX',
        'Malaysia' => 'MY',
        'Mozambique' => 'MZ',
        'Namibia' => 'NA',
        'New Caledonia' => 'NC',
        'Nouvelle-Calédonie' => 'NC',
        'Niger' => 'NE',
        'Norfolk Island' => 'NF',
        'Nigeria' => 'NG',
        'Nicaragua' => 'NI',
        'The Netherlands' => 'NL',
        'Nederland' => 'NL',
        'Norway' => 'NO',
        'Norge' => 'NO',
        'Noreg' => 'NO',
        'Nepal' => 'NP',
        'Nauru' => 'NR',
        'Niue' => 'NU',
        'New Zealand' => 'NZ',
        'Oman' => 'OM',
        'سلطنة عُمان' => 'OM',
        'Panama' => 'PA',
        'Peru' => 'PE',
        'Perú' => 'PE',
        'French Polynesia' => 'PF',
        'Polynésie française' => 'PF',
        'Papua New Guinea' => 'PG',
        'Philippines' => 'PH',
        'Pakistan' => 'PK',
        'پاکستان' => 'PK',
        'Poland' => 'PL',
        'Polska' => 'PL',
        'Saint Pierre and Miquelon' => 'PM',
        'Saint-Pierre-et-Miquelon' => 'PM',
        'Pitcairn' => 'PN',
        'Puerto Rico' => 'PR',
        'Palestinian Territory' => 'PS',
        'Portugal' => 'PT',
        'Palau' => 'PW',
        'Paraguay' => 'PY',
        'Qatar' => 'QA',
        'قطر' => 'QA',
        'Reunion' => 'RE',
        'La Réunion' => 'RE',
        'Romania' => 'RO',
        'România' => 'RO',
        'Serbia' => 'RS',
        'Србија' => 'RS',
        'Russia' => 'RU',
        'Россия' => 'RU',
        'Rwanda' => 'RW',
        'Saudi Arabia' => 'SA',
        'السعودية' => 'SA',
        'Solomon Islands' => 'SB',
        'Seychelles' => 'SC',
        'Sudan' => 'SD',
        'السودان' => 'SD',
        'Sweden' => 'SE',
        'Sverige' => 'SE',
        'Singapore' => 'SG',
        'Saint Helena' => 'SH',
        'Slovenia' => 'SI',
        'Slovenija' => 'SI',
        'Svalbard and Jan Mayen' => 'SJ',
        'Slovakia' => 'SK',
        'Slovensko' => 'SK',
        'Sierra Leone' => 'SL',
        'San Marino' => 'SM',
        'Sénégal' => 'SN',
        'Somalia' => 'SO',
        'الصومال' => 'SO',
        'Suriname' => 'SR',
        'São Tomé and Príncipe' => 'ST',
        'São Tomé e Príncipe' => 'ST',
        'South Sudan' => 'SS',
        'El Salvador' => 'SV',
        'Saint Martin (Dutch part)' => 'SX',
        'Sint Maarten' => 'SX',
        'Syria' => 'SY',
        'سوريا' => 'SY',
        'Sūriyya' => 'SY',
        'eSwatini' => 'SZ',
        'Turks and Caicos Islands' => 'TC',
        'Chad' => 'TD',
        'Tchad' => 'TD',
        'تشاد' => 'TD',
        'French Southern and Antarctic Lands' => 'TF',
        'Terres australes et antarctiques françaises' => 'TF',
        'Togo' => 'TG',
        'Thailand' => 'TH',
        'ประเทศไทย' => 'TH',
        'Tajikistan' => 'TJ',
        'Tokelau' => 'TK',
        'Timor-Leste' => 'TL',
        'Timor Lorosa\'e' => 'TL',
        'Turkmenistan' => 'TM',
        'Türkmenistan' => 'TM',
        'Tunisia' => 'TN',
        'تونس' => 'TN',
        'Tunisie' => 'TN',
        'Tonga' => 'TO',
        'Turkey' => 'TR',
        'Türkiye' => 'TR',
        'Trinidad and Tobago' => 'TT',
        'Tuvalu' => 'TV',
        'Taiwan' => 'TW',
        'Tanzania' => 'TZ',
        'Ukraine' => 'UA',
        'Україна' => 'UA',
        'Uganda' => 'UG',
        'United States Minor Outlying Islands' => 'UM',
        'United States of America' => 'US',
        'Uruguay' => 'UY',
        'Uzbekistan' => 'UZ',
        'City of the Vatican' => 'VA',
        'Città del Vaticano' => 'VA',
        'Saint Vincent and the Grenadines' => 'VC',
        'Venezuela' => 'VE',
        'British Virgin Islands' => 'VG',
        'United States Virgin Islands' => 'VI',
        'Vietnam' => 'VN',
        'Việt Nam' => 'VN',
        'Vanuatu' => 'VU',
        'Wallis and Futuna' => 'WF',
        'Wallis-et-Futuna' => 'WF',
        'Samoa' => 'WS',
        'Kosovo' => 'XK',
        'Kosova' => 'XK',
        'Косово' => 'XK',
        'Yemen' => 'YE',
        'اليَمَن' => 'YE',
        'Mayotte' => 'YT',
        'South Africa' => 'ZA',
        'Zambia' => 'ZM',
        'Zimbabwe' => 'ZW',
    ];

    /**
     * Obtain the name of the given country code.
     *
     * @param string $countryCode ISO alpha-2 country code
     *
     * @return string|null Country name, or null if unknown
     */
    public static function codeToName($countryCode): ?string
    {
        $countryCode = static::normalizeCode($countryCode);

        return static::$countriesByCode[$countryCode] ?? null;
    }

    /**
     * Obtain the code of the given country name.
     *
     * @param string $countryName Country name
     *
     * @return string|null ISO alpha-2 country code, or null if unknown
     */
    public static function nameToCode($countryName): ?string
    {
        $search = strtolower(trim($countryName ?? ''));
        if (empty($search)) {
            return null;
        }

        // get the country codes mapped by country names in lower case
        $codesByCountry = array_combine(
            array_map('strtolower', array_keys(static::$codesByCountry)),
            array_values(static::$codesByCountry)
        );

        if (isset($codesByCountry[$search])) {
            return $codesByCountry[$search];
        }

        // return closest match using levenshtein ??

        return null;
    }

    /**
     * Normalize the given country code to upper-case.
     */
    public static function normalizeCode($countryCode): ?string
    {
        $countryCode = strtoupper(trim($countryCode ?? ''));

        if (empty($countryCode)) {
            return null;
        }

        switch ($countryCode) {
            case 'UK': // https://www.iso.org/obp/ui/#iso:code:3166:UK
                return 'GB';
            case 'FX': // https://www.iso.org/obp/ui/#iso:code:3166:FX
                return 'FR';
            default:
                return $countryCode;
        }
    }

    /**
     * @param string $countryCode
     * @param string $stateName
     * @return string|null
     */
    public static function stateNameToCode(string $countryCode, string $stateName): ?string
    {
        if (!$countryCode = self::normalizeCode($countryCode)) {
            return null;
        }

        if (!$stateName = strtolower(trim($stateName ?? ''))) {
            return null;
        }

        $countries = new \PragmaRX\Countries\Package\Countries();
        return $countries->where('cca2', $countryCode)
            ->first()
            ->hydrateStates()
            ->states
            ->first(function ($state) use ($stateName) {
                return strtolower($state->name) == $stateName;
            })
            ->postal ?? null;
    }

    public static function stateCodeToName(string $countryCode, string $stateCode): ?string
    {
        if (!$countryCode = self::normalizeCode($countryCode)) {
            return null;
        }

        if (!$stateCode = strtolower(trim($stateCode ?? ''))) {
            return null;
        }

        $countries = new \PragmaRX\Countries\Package\Countries();
        return $countries->where('cca2', $countryCode)
                ->first()
                ->hydrateStates()
                ->states
                ->first(function ($state) use ($stateCode) {
                    return strtolower($state->postal) == $stateCode;
                })
                ->name ?? null;
    }

    /**
     * Normalize state name
     */
    public static function normalizeStateName(string $tld, ?string $state, ?string $postCode): ?string
    {
        if (empty($state)) {
            return null;
        }

        if (Utils::normalizeTld($tld) === 'es') {
            $state = self::accentsToAscii(strtoupper(trim($state)));

            if (empty($postCode)) {
                return $state;
            }

            /** @link https://support.openprovider.eu/hc/en-us/articles/216647268--es-List-of-approved-provinces */
            $postCodeMap = [
                '01' => 'ARABA',
                '02' => 'ALBACETE',
                '03' => 'ALICANTE',
                '04' => 'ALMERIA',
                '05' => 'AVILA',
                '06' => 'BADAJOZ',
                '07' => 'ILLES BALEARS',
                '08' => 'BARCELONA',
                '09' => 'BURGOS',
                '10' => 'CACERES',
                '11' => 'CADIZ',
                '12' => 'CASTELLON',
                '13' => 'CIUDAD REAL',
                '14' => 'CORDOBA',
                '15' => 'CORUÑA, A',
                '16' => 'CUENCA',
                '17' => 'GIRONA',
                '18' => 'GRANADA',
                '19' => 'GUADALAJARA',
                '20' => 'GIPUZKOA',
                '21' => 'HUELVA',
                '22' => 'HUESCA',
                '23' => 'JAEN',
                '24' => 'LEON',
                '25' => 'LLEIDA',
                '26' => 'RIOJA, LA',
                '27' => 'LUGO',
                '28' => 'MADRID',
                '29' => 'MALAGA',
                '30' => 'MURCIA',
                '31' => 'NAVARRA',
                '32' => 'OURENSE',
                '33' => 'ASTURIAS',
                '34' => 'PALENCIA',
                '35' => 'PALMAS, LAS',
                '36' => 'PONTEVEDRA',
                '37' => 'SALAMANCA',
                '38' => 'SANTA CRUZ DE TENERIFE',
                '39' => 'CANTABRIA',
                '40' => 'SEGOVIA',
                '41' => 'SEVILLA',
                '42' => 'SORIA',
                '43' => 'TARRAGONA',
                '44' => 'TERUEL',
                '45' => 'TOLEDO',
                '46' => 'VALENCIA',
                '47' => 'VALLADOLID',
                '48' => 'BIZKAIA',
                '49' => 'ZAMORA',
                '50' => 'ZARAGOZA',
                '51' => 'CEUTA',
                '52' => 'MELILLA',
            ];

            return $postCodeMap[substr($postCode, 0, 2)] ?? $state;
        }

        return $state;
    }

    /**
     * Convert accented characters to their ASCII equivalents.
     *
     * @param string $string E.g., Almería
     *
     * @return string E.g., Almeria
     */
    public static function accentsToAscii(string $string): string
    {
        $normalizeChars = [
            'Š' => 'S',
            'š' => 's',
            'Ð' => 'Dj',
            'Ž' => 'Z',
            'ž' => 'z',
            'À' => 'A',
            'Á' => 'A',
            'Â' => 'A',
            'Ã' => 'A',
            'Ä' => 'A',
            'Å' => 'A',
            'Æ' => 'A',
            'Ç' => 'C',
            'È' => 'E',
            'É' => 'E',
            'Ê' => 'E',
            'Ë' => 'E',
            'Ì' => 'I',
            'Í' => 'I',
            'Î' => 'I',
            'Ï' => 'I',
            'Ñ' => 'N',
            'Ń' => 'N',
            'Ò' => 'O',
            'Ó' => 'O',
            'Ô' => 'O',
            'Õ' => 'O',
            'Ö' => 'O',
            'Ø' => 'O',
            'Ù' => 'U',
            'Ú' => 'U',
            'Û' => 'U',
            'Ü' => 'U',
            'Ý' => 'Y',
            'Þ' => 'B',
            'ß' => 'Ss',
            'à' => 'a',
            'á' => 'a',
            'â' => 'a',
            'ã' => 'a',
            'ä' => 'a',
            'å' => 'a',
            'æ' => 'a',
            'ç' => 'c',
            'è' => 'e',
            'é' => 'e',
            'ê' => 'e',
            'ë' => 'e',
            'ì' => 'i',
            'í' => 'i',
            'î' => 'i',
            'ï' => 'i',
            'ð' => 'o',
            'ñ' => 'n',
            'ń' => 'n',
            'ò' => 'o',
            'ó' => 'o',
            'ô' => 'o',
            'õ' => 'o',
            'ö' => 'o',
            'ø' => 'o',
            'ù' => 'u',
            'ú' => 'u',
            'û' => 'u',
            'ü' => 'u',
            'ý' => 'y',
            'þ' => 'b',
            'ÿ' => 'y',
            'ƒ' => 'f',
            'ă' => 'a',
            'ș' => 's',
            'ț' => 't',
            'Ă' => 'A',
            'Ș' => 'S',
            'Ț' => 'T',
        ];

        return strtr($string, $normalizeChars);
    }
}
